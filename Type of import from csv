/* Простой метод на основе proc import */

proc import out=temp datafile='\\server\Workgroups\Temp\Tmp_import.csv'
	dbms=csv replace;
	delimiter=';';
run;

* Такой подход сам определяет форматы и длину полей файлов. Здесь то и лежит подводный камень.
* По-умолчанию, процедура сканирует первые 20 строк и на основе них составляет карту форматов и длин полей. 
* Соответственно, если у вас в начале файла длина и формат данных отличаются от остальных, то возникнет некорректное отображение или трим данных.
* На этот случай есть параметр guessingrows=, который переопределяет количество сканируемых строк на ваше значение (можно выставить максимальный предполагаемый размер файла).

* К примеру здесь анализ данных будет проходить на основе 500 первых строк:

proc import out=temp datafile='\\server\Workgroups\Temp\Tmp_import.csv'
     dbms=csv replace;
     delimiter=';';
guessingrows=500;
run;

* Так же есть ещё один полезный параметр getnames=yes or no, который указывает на то, брать ли первую строку как название полей. Этот параметр лучше всегда указывать, так как иначе будет происходить автоматическое определение.

* Этот способ особенно поможет, когда полей много и прописывать в data-шаге достаточно затруднительно. В итоге получается быстро, качественно и коротко.

* способ #2

data temp;
     infile '\\server\Workgroups\Temp\Tmp_import.csv' 
          lrecl=200 dsd
          encoding='wcyrillic' 
          dlm=';'
          firstobs=2;
     length OPER_DT DISPSPLIT AVAIL_TIME 8;
     informat OPER_DT DDMMYY10. DISPSPLIT AVAIL_TIME 3.;
     format OPER_DT date.;
     input OPER_DT -- AVAIL_TIME;
run;

* lrecl – для экономии места в оперативке, указывает максимальную длину строки в файле
* dsd – последовательные разделители считаются пустыми ячейками
* firstobs – указывает что данные надо брать начиная со второй строки
* length – задаем максимальную длину полей (можно перечислять группами, а не для каждого поля)
* informat – задаем как интерпретировать входные данные (в основном это дата/время, текст, число)
* format – задаем как отображать данные в итоговой таблице
* input – перечисляем выводимые в таблицу поля (если порядок неважен и все поля уже были указаны в предыдущих параметрах (например в length) то можно указать через двойной дефис первое и последнее поле)

Таким образом мы можем сократить код и упростить подключение файлов в SAS.
